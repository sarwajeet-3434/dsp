% Define two sequences
x = [1 2 3]; % First sequence
h = [4 5 6]; % Second sequence

% Length of the linear convolution
N = length(x) + length(h) - 1;

% Zero-padding the sequences to length N
x_padded = [x, zeros(1, N - length(x))];
h_padded = [h, zeros(1, N - length(h))];

% Compute the DFTs of the zero-padded sequences
X = fft(x_padded);
H = fft(h_padded);

% Multiply the DFTs (frequency-domain multiplication)
Y = X .* H;

% Compute the IDFT to get the linear convolution result
y = ifft(Y);

% Plot the sequences and the convolution result
n_x = 0:length(x)-1;       % Time indices for x
n_h = 0:length(h)-1;       % Time indices for h
n_y = 0:length(y)-1;       % Time indices for y

figure;

% Plot the first sequence
subplot(3, 1, 1);
stem(n_x, x, 'b', 'LineWidth', 1.5);
title('First Sequence (x[n])');
xlabel('n');
ylabel('Amplitude');
grid on;

% Plot the second sequence
subplot(3, 1, 2);
stem(n_h, h, 'r', 'LineWidth', 1.5);
title('Second Sequence (h[n])');
xlabel('n');
ylabel('Amplitude');
grid on;

% Plot the linear convolution result
subplot(3, 1, 3);
stem(n_y, real(y), 'g', 'LineWidth', 1.5);
title('Linear Convolution Result (Using FFT)');
xlabel('n');
ylabel('Amplitude');
grid on;

% Display the result
disp('Linear Convolution Result:');
disp(real(y)); % Display the real part of the result